{
  "stats": {
    "suites": 3,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2023-03-01T16:11:33.869Z",
    "end": "2023-03-01T16:11:35.236Z",
    "duration": 1367,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "855549df-0650-497f-be06-0ec8e695683f",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "61e1e52b-80af-44a3-9e66-d58124c20b0b",
          "title": "Create",
          "fullFile": "D:\\QA\\QA_NestAcademy\\nestAPI\\tests\\scenarios\\create.test.js",
          "file": "\\tests\\scenarios\\create.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should successful create data",
              "fullTitle": "Create Should successful create data",
              "timedOut": false,
              "duration": 571,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await ReqresApi.create_user(data.CREATE_USER);\nassert.equal(response.status, 201);",
              "err": {},
              "uuid": "a302a1b1-0274-4993-a73c-b0e76c0f3421",
              "parentUUID": "61e1e52b-80af-44a3-9e66-d58124c20b0b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a302a1b1-0274-4993-a73c-b0e76c0f3421"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 571,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7ab21d26-c2a2-4378-ae5d-2dcc21f95116",
          "title": "List User",
          "fullFile": "D:\\QA\\QA_NestAcademy\\nestAPI\\tests\\scenarios\\list-user.test.js",
          "file": "\\tests\\scenarios\\list-user.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should successful get the list users in page = 2",
              "fullTitle": "List User Should successful get the list users in page = 2",
              "timedOut": false,
              "duration": 372,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const param = getParams(data.LIST_USER_PARAM['page']);\nconst response = await ReqresApi.list_user(param);\nassert.equal(response.status, 200);",
              "err": {},
              "uuid": "c4a9d08f-fbfe-4aa8-8ff5-66e919409c99",
              "parentUUID": "7ab21d26-c2a2-4378-ae5d-2dcc21f95116",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c4a9d08f-fbfe-4aa8-8ff5-66e919409c99"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 372,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ae6bc7db-4df0-4cb4-91dc-80410f8bf4ab",
          "title": "Register",
          "fullFile": "D:\\QA\\QA_NestAcademy\\nestAPI\\tests\\scenarios\\register.test.js",
          "file": "\\tests\\scenarios\\register.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should unsuccessful register when insert invalid data",
              "fullTitle": "Register Should unsuccessful register when insert invalid data",
              "timedOut": false,
              "duration": 414,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await ReqresApi.register(data.INVALID_REGISTER);\nassert.equal(response.status, 400);\nassert.containsAllKeys(response.data, ['error']);\nassert.isString(response.data.error);\nassert.equal(response.data.error, data.ERROR_REGISTER_MESSAGE.error);",
              "err": {},
              "uuid": "5e42f72d-d71c-4aa3-a04f-398ffe614238",
              "parentUUID": "ae6bc7db-4df0-4cb4-91dc-80410f8bf4ab",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5e42f72d-d71c-4aa3-a04f-398ffe614238"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 414,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}