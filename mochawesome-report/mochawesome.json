{
  "stats": {
    "suites": 3,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2023-03-02T15:27:27.981Z",
    "end": "2023-03-02T15:27:29.932Z",
    "duration": 1951,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "392f2599-e595-405f-b3e1-7638dd897b49",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "40443b0c-4853-49cd-bf91-a348d8777a96",
          "title": "Create",
          "fullFile": "D:\\QA\\QA_NestAcademy\\nestAPI\\tests\\scenarios\\create.test.js",
          "file": "\\tests\\scenarios\\create.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should successful create data",
              "fullTitle": "Create Should successful create data",
              "timedOut": false,
              "duration": 606,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await ReqresApi.create_user(data.CREATE_USER);\nassert.equal(response.status, 201);",
              "err": {},
              "uuid": "7795ee50-55a2-4051-a893-a50607f37104",
              "parentUUID": "40443b0c-4853-49cd-bf91-a348d8777a96",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7795ee50-55a2-4051-a893-a50607f37104"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 606,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "df14c6c7-16d0-4e4e-8de5-5c89088a7100",
          "title": "List User",
          "fullFile": "D:\\QA\\QA_NestAcademy\\nestAPI\\tests\\scenarios\\list-user.test.js",
          "file": "\\tests\\scenarios\\list-user.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should successful get the list users in page = 2",
              "fullTitle": "List User Should successful get the list users in page = 2",
              "timedOut": false,
              "duration": 447,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const param = getParams(data.LIST_USER_PARAM['page']);\nconst response = await ReqresApi.list_user(param);\nassert.equal(response.status, 200);",
              "err": {},
              "uuid": "c0642619-6ba4-413d-a1bd-0bff90377fdc",
              "parentUUID": "df14c6c7-16d0-4e4e-8de5-5c89088a7100",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c0642619-6ba4-413d-a1bd-0bff90377fdc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 447,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "beeff812-fbfe-4173-8b71-cd30fee0f5cd",
          "title": "Register",
          "fullFile": "D:\\QA\\QA_NestAcademy\\nestAPI\\tests\\scenarios\\register.test.js",
          "file": "\\tests\\scenarios\\register.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should unsuccessful register when insert invalid data",
              "fullTitle": "Register Should unsuccessful register when insert invalid data",
              "timedOut": false,
              "duration": 424,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await ReqresApi.register(data.INVALID_REGISTER);\nassert.equal(response.status, 400);\nassert.containsAllKeys(response.data, ['error']);\nassert.isString(response.data.error);\nassert.equal(response.data.error, data.ERROR_REGISTER_MESSAGE.error);",
              "err": {},
              "uuid": "d6abc86c-55c9-4995-ac1b-b6ea4ef529f2",
              "parentUUID": "beeff812-fbfe-4173-8b71-cd30fee0f5cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should successful register when insert valid data",
              "fullTitle": "Register Should successful register when insert valid data",
              "timedOut": false,
              "duration": 457,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await ReqresApi.register(data.VALID_REGISTER);\nassert.equal(response.status, 200);",
              "err": {},
              "uuid": "cf9bdbb5-eeaa-4b58-b457-758fcbd5211f",
              "parentUUID": "beeff812-fbfe-4173-8b71-cd30fee0f5cd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d6abc86c-55c9-4995-ac1b-b6ea4ef529f2",
            "cf9bdbb5-eeaa-4b58-b457-758fcbd5211f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 881,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}